public class GTLN {

	static int max(int a,int b)
	{
		if(a>b)
			return a;
		else 
			return b;
	}
	static int min(int[] arr)
	{
		int min=arr[0];
		for(int i=0;i<arr.length;i++)
		{
		if(arr[i]<min)
		min=arr[i];
		}
		return min;
	}
	
	static String BMI(double a,double b)
	{
		double c=a/b/b;
		if(c<18.5)
		{
		
		return "Thieu can";
		}
		else if(18.5<=c && c<=22.995)
		{
		
		return "Binh thuong";
		}
		else if(c>=23 && c<=24.99)
		{
		
		return "Thua can";
		}
		else 
		{
		
		return "Beo phi";
		}
	}


}
import static org.junit.jupiter.api.Assertions.*;


import org.junit.jupiter.api.Test;

class TestLabs04 {

	@Test
	void test() {
	
	int i=GTLN.max(3, 4) ;
	assertEquals(3,i);	
	}

	@Test
	void test1() {
	
	int i=GTLN.max(2, 4) ;
	assertEquals(4,i);	
	}
	@Test
	void test2() {
	
	int i=GTLN.max(2, 4) ;
	assertEquals(6,i);	
	}
	@Test
	void test3() {
	
	int i=GTLN.max(5, 6) ;
	assertEquals(6,i);	
	}
	@Test
	void test4() {
	
	int i=GTLN.max(10, 4) ;
	assertEquals(4,i);	
	}
	@Test
	void test5() {
	
	int i=GTLN.max(-5, 0) ;
	assertEquals(0,i);	
	}

}
class TestB2 {

	@Test
	void test() {
	int[] arr= {5,6,9,8,1,2,0,4,11,56};
	
	int i=GTLN.min(arr) ;
	assertEquals(0,i);	
	}
	
	@Test
	void test1() {
	int[] arr= {6,8,9,45,12,7,959,626,15,3,-6,-5,-32,-541,0};
	
	int i=GTLN.min(arr) ;
	assertEquals(-541,i);	
	}
	
	@Test
	void test2() {
	int[] arr= {-6,-8,6,9,5,-5,65,39};
	
	int i=GTLN.min(arr) ;
	assertEquals(0,i);	
	}
	
	@Test
	void test3() {
	int[] arr= {5,9,6,3,47,-8,5,9,-3,-1};
	
	int i=GTLN.min(arr) ;
	assertEquals(-8,i);	
	}
	
	@Test
	void test4() {
	int[] arr= {6,4,8,7,5,3,2,-5,-63,-8,-96};
	
	int i=GTLN.min(arr) ;
	assertEquals(-96,i);	
	}
}
class TestB3 {

	@Test
	void test() {
		String i=GTLN.BMI(70, 1.7) ;
		assertEquals("Thua can",i);	
	}
	

	@Test
	void test1() {
		String i=GTLN.BMI(80, 1.7) ;
		assertEquals("Thua can",i);	
	}
	

	@Test
	void test2() {
		String i=GTLN.BMI(110, 1.9) ;
		assertEquals("Beo phi",i);	
	}
	
	@Test
	void test3() {
		String i=GTLN.BMI(50, 1.75) ;
		assertEquals("Thieu can",i);	
	}
	

	@Test
	void test4() {
		String i=GTLN.BMI(80, 1.62) ;
		assertEquals("Binh thuong",i);	
	}
	
}
